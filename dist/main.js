(()=>{"use strict";async function e(e){try{const t=await fetch("https://api.weatherapi.com/v1/forecast.json?key=829d734e92bc4a00882163051232803&q="+e+"&days=7&aqi=no&alerts=no"),n=await t.json(),o=await fetch("https://api.weatherapi.com/v1/astronomy.json?key=829d734e92bc4a00882163051232803&q="+e+"&dt=",{headers:{"Content-type":"application/json"}}),r=await o.json();!function(e,t){document.querySelector(".location").textContent=e.location.name,document.querySelector(".condition").textContent=e.current.condition.text;const n=document.querySelector(".temperature");n.textContent=e.current.temp_c+"°",document.querySelector(".humidity").textContent="Humidity: "+e.current.humidity+"%",document.querySelector(".wind").textContent="Wind: "+e.current.wind_kph+" kph";const o=document.querySelector(".through-day-temp");o.replaceChildren();for(let t=0;t<24;t++)o.innerHTML+=`<div class='hourly-temp'>\n        <div>${e.forecast.forecastday[0].hour[t].time.substr(11,5)}</div>\n        <div>${e.forecast.forecastday[0].hour[t].chance_of_rain}%</div>\n        <div><img src='${e.forecast.forecastday[0].hour[t].condition.icon}'></div>\n        <div class='temperatureHour'>${e.forecast.forecastday[0].hour[t].temp_c}°</div>\n        </div>`;let r=!0;const c=document.querySelector(".change-cel-fah"),a=document.querySelectorAll(".temperatureHour");c.addEventListener("click",(()=>{if(r){n.textContent=e.current.temp_f+"°",document.querySelector(".feels-like").textContent=e.current.feelslike_f+"°";for(let t=0;t<24;t++)a[t].textContent=e.forecast.forecastday[0].hour[t].temp_f+"°";const t=document.querySelectorAll(".week-temperature");for(let n=0;n<7;n++)t[n].textContent=e.forecast.forecastday[n].day.avgtemp_f+"°";r=!1}else{n.textContent=e.current.temp_c+"°",document.querySelector(".feels-like").textContent=e.current.feelslike_c+"°";for(let t=0;t<24;t++)a[t].textContent=e.forecast.forecastday[0].hour[t].temp_c+"°";const t=document.querySelectorAll(".week-temperature");for(let n=0;n<7;n++)t[n].textContent=e.forecast.forecastday[n].day.avgtemp_c+"°";r=!0}})),document.querySelector(".sunrise").textContent=t.astronomy.astro.sunrise,document.querySelector(".sunset").textContent=t.astronomy.astro.sunset,document.querySelector(".feels-like").textContent=e.current.feelslike_c+"°",document.querySelector(".humidity-info").textContent=e.current.humidity+"%",document.querySelector(".wind-direction").textContent=e.current.wind_dir,document.querySelector(".pressure").textContent=e.current.pressure_mb+" hPa",document.querySelector(".visibility").textContent=e.current.vis_km+" km",document.querySelector(".uv-index").textContent=e.current.uv;const i=document.querySelector(".week-temp");i.replaceChildren(),i.innerHTML+='<div class="indicator">\n        <div class="week-day">DAY</div>\n        <div class="week-condition"></div>\n        <div class="week-rain">CHANCE OF RAIN</div>\n        <div class="week-humidity">HUMIDITY</div>\n        <div class="week-temperature-indi">TEMPERATURE</div>\n        </div>';for(let t=0;t<7;t++){let n=new Date(e.forecast.forecastday[t].date).toString();i.innerHTML+=`\n        <div class='day'>\n        <div class='week-day'>${n.substr(0,10)}</div>\n        <div class='week-condition'><img src='${e.forecast.forecastday[t].day.condition.icon}'></div>\n        <div class='week-rain'>${e.forecast.forecastday[t].day.daily_chance_of_rain}%</div>\n        <div class='week-humidity'>${e.forecast.forecastday[t].day.avghumidity}%</div>\n        <div class='week-temperature'>${e.forecast.forecastday[t].day.avgtemp_c}°</div>\n        </div>\n        `}}(n,r),console.log(n.forecast.forecastday[0].hour[0]),console.log(n),console.log(r),console.log(n.current.temp_c),console.log("feels like: "+n.current.feelslike_c+" C"),console.log(n.current.condition.text)}catch(e){console.log(e)}}e("Milan"),function(){let t;document.querySelector(".search-button").addEventListener("click",(n=>{const o=document.querySelector("#place");t=o.value,console.log(t),e(t),n.preventDefault()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,